dataset: # Required.
  type: cityscapes_semi #Semi-supervised dataset
  train: # 744 labeled images with data augmentation (flip, random resize, random crop)
    data_root: /home/ubuntu/U2PL-8813/data/cityscapes
    #data_root: /home/ubuntu/U2PL-8813/data/train
    data_list: /home/ubuntu/U2PL-8813/data/splits/cityscapes/744/labeled.txt
    flip: True
    GaussianBlur: False
    rand_resize: [0.5, 2.0]
    #rand_rotation: [-10.0, 10.0]
    crop:
      type: rand
      size: [500, 500] # random crop image with HxW size
  val:
    data_root: /home/ubuntu/U2PL-8813/data/cityscapes
    data_list: /home/ubuntu/U2PL-8813/data/splits/cityscapes/val.txt
    crop:
      type: center
      size: [500, 500] # central crop image with HxW size
  batch_size: 4
  n_sup: 744
  noise_std: 0.1 # Standard deviation of Gaussian noise added
  workers: 2 # Data loading workers
  # Normalization: mean and standard deviation values provided
  mean: [123.675, 116.28, 103.53] # R G B
  std: [58.395, 57.12, 57.375] # R G B
  ignore_label: 255 # Ignored label (cancel for crack)

trainer: # Required.
  epochs: 5 #200
  eval_on: True
  sup_only_epoch: 1 # warm up epoch is helpful
  optimizer:
    type: SGD # stochastic gradient descent
    kwargs:
      lr: 0.002  # 0.01 8GPUs
      momentum: 0.9
      weight_decay: 0.0005
  lr_scheduler:
    mode: poly # polinomial decay
    kwargs:
      power: 0.9
  unsupervised:
    TTA: False # Test-Time Augmentation
    """
    The idea behind TTA is to apply various data augmentation methods, such as flipping, rotation, scaling,
    or cropping, to the input test samples and then average or combine the model's predictions for these augmented samples.
    """
    drop_percent: 80
    apply_aug: cutmix
  # Various parameters for contralling the selection of positive and negative examples
  contrastive:
    negative_high_entropy: True
    low_rank: 3
    high_rank: 20
    current_class_threshold: 0.3
    current_class_negative_threshold: 1
    unsupervised_entropy_ignore: 80
    low_entropy_threshold: 20
    num_negatives: 50
    num_queries: 256
    temperature: 0.5

saver:
  auto_resume: True
  snapshot_dir: checkpoints
  pretrain: ''

# Loss function configuration
criterion:
  type: ohem
  kwargs:
    thresh: 0.7
    min_kept: 100000

net: # Required.
  num_classes: 19
  sync_bn: True
  ema_decay: 0.99
  aux_loss:
    aux_plane: 1024
    loss_weight: 0.4
  encoder:
    type: u2pl.models.resnet.resnet50
    kwargs:
      multi_grid: True
      zero_init_residual: True
      fpn: True
      replace_stride_with_dilation: [False, True, True]  #layer0...1 is fixed, layer2...4
  decoder:
    type: u2pl.models.decoder.dec_deeplabv3_plus
    kwargs:
      inner_planes: 256
      dilations: [12, 24, 36]
